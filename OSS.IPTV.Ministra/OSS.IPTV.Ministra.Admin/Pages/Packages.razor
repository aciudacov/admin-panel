@page "/packages"
@using OSS.IPTV.Ministra.Repository.Entities
@inject NavigationManager NavigationManager

<PageTitle>TV Packages</PageTitle>
<MudContainer MaxWidth="MaxWidth.ExtraLarge">
    <MudGrid>
        <MudItem xs="2">
            <MudPaper Class="pa-2">
                <EditForm Model="Filter">
                    <MudTextField T="string" Label="Package name" @bind-Value="Filter.Name" />
                    <MudTextField T="int?" Label="Package ID" @bind-Value="Filter.Id" />
                    <MudSelect T="int?" @bind-Value="Filter.Type" Label="Package type">
                        @foreach (var item in PackageTypes)
                        {
                            <MudSelectItem T="int?" Value="item.TypeId">@item.Name</MudSelectItem>
                        }
                    </MudSelect>
                    <MudSelect T="int" @bind-Value="Filter.State" Label="Package State">
                        <MudSelectItem T="int" Value="1">Any</MudSelectItem>
                        <MudSelectItem T="int" Value="2">Active</MudSelectItem>
                        <MudSelectItem T="int" Value="3">Inactive</MudSelectItem>
                    </MudSelect>
                    <br />
                    <MudButtonGroup Color="Color.Primary" Variant="Variant.Filled" Class="w-100 mb-2">
                        <MudButton ButtonType="ButtonType.Submit" OnClick="OnApplyClick" Class="w-50">Apply</MudButton>
                        <MudButton ButtonType="ButtonType.Reset" OnClick="OnResetClick" Class="w-50">Reset</MudButton>
                    </MudButtonGroup>
                    <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Size="Size.Small" OnClick="OnAddClick" Class="w-100">Add new package</MudButton>
                </EditForm>
            </MudPaper>
        </MudItem>
        <MudItem xs="10">
            <MudPaper>
                <MudTable @ref="Table" T="TvPackage" ServerData="state => LoadItems(state)" Dense="true" FixedFooter="true" FixedHeader="true" Height="85vh">
                    <HeaderContent>
                        <MudTh><MudTableSortLabel SortLabel="package_id" T="TvPackage">Package ID</MudTableSortLabel></MudTh>
                        <MudTh><MudTableSortLabel SortLabel="package_name" T="TvPackage">Name</MudTableSortLabel></MudTh>
                        <MudTh>Type</MudTh>
                        <MudTh>Price</MudTh>
                        <MudTh>Duration</MudTh>
                        <MudTh>Promo limit</MudTh>
                        <MudTh>Active</MudTh>
                        <MudTh>Billing active</MudTh>
                        <MudTh>User type</MudTh>
                        <MudTh>Controls</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Package ID">@context.PackageId</MudTd>
                        <MudTd DataLabel="Name">@context.Name</MudTd>
                        <MudTd DataLabel="Type">@PackageTypes.Find(p => p.TypeId == context.TypeId).Name</MudTd>
                        <MudTd DataLabel="Price">@Convert.ToInt32(context.Price)</MudTd>
                        <MudTd DataLabel="Duration">@context.Duration</MudTd>
                        <MudTd DataLabel="Promo limit">@context.PromoLimit</MudTd>
                        <MudTd DataLabel="Active">@if (context.IsActive)
                                                  {
                                                      <span>True</span>
                                                  }
                                                  else
                                                  {
                                                      <span class="red-text">False</span>
                                                  }
                            </MudTd>
                        <MudTd DataLabel="Billing active">@context.IsBillingActive</MudTd>
                        <MudTd DataLabel="User type">@switch (context.UserType)
                                                     {
                                                         case true:
                                                             <span>Business</span>
                                                             break;
                                                         case false:
                                                             <span>Home</span>
                                                             break;
                                                         case null:
                                                             <span>Any</span>
                                                             break;
                                                     }
                        </MudTd>
                        <MudTd>
                            <MudButtonGroup Variant="Variant.Filled" Size="Size.Small">
                                <MudButton ButtonType="ButtonType.Button" OnClick="@(_ => OnEditClick(context))">Edit</MudButton>
                                <MudButton ButtonType="ButtonType.Button" OnClick="@(_ => OnChannelsClick(context.PackageId, context.Name))">Channels</MudButton>
                                <MudButton ButtonType="ButtonType.Button" OnClick="@(_ => NavigationManager.NavigateTo($"logs/2/{context.PackageId}"))">Logs</MudButton>
                            </MudButtonGroup>
                        </MudTd>
                    </RowTemplate>
                    <PagerContent>
                        <MudTablePager PageSizeOptions="new[] {15, 25, 50, 100, 200, 500}" />
                    </PagerContent>
                </MudTable>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>